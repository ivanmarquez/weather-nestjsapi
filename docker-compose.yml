networks:
  soccer_app_network:
    name: soccer_app_network
    driver: bridge

services:
  nestapi:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: wheater_nestapi_app
    environment:
      HOST_PORT: ${HOST_PORT}
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - soccer_app_network
    volumes:
      - ./app:/app
      - /app/node_modules
    ports:
      - "${HOST_PORT}:3000"
    env_file:
      - ./app/.env
    command: npm run start:prod

  db:
    image: postgres:17-alpine
    container_name: wheater_nestapi_postgres_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      HOST_POSTGRES_PORT: ${HOST_POSTGRES_PORT}
    ports:
      - "${HOST_POSTGRES_PORT}:5432"
    volumes:
      - wheater_nestapi_postgres_data:/var/lib/postgresql/data
    networks:
      - soccer_app_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  wheater_nestapi_postgres_data:
